<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>by.andd3dfx</groupId>
    <artifactId>db-versioning</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>liquibase-db</artifactId>
  <packaging>jar</packaging>

  <name>DB versioning : Liquibase</name>

  <properties>
    <liquibase.version>4.21.1</liquibase.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>5.6.15.Final</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <showLogs>true</showLogs>
          <images>
            <image>
              <name>mysql:${mysql.version}</name>
              <run>
                <ports>
                  <port>3306:3306</port>
                </ports>
                <env>
                  <MYSQL_DATABASE>db</MYSQL_DATABASE>
                  <MYSQL_ROOT_PASSWORD>some_password</MYSQL_ROOT_PASSWORD>
                  <MYSQL_USER>user</MYSQL_USER>
                  <MYSQL_PASSWORD>password</MYSQL_PASSWORD>
                </env>
                <wait>
                  <log>starting as process 1</log>
                  <time>20000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>

        <!-- Connect start/stop to pre- and post- integration-test phase respectively
        if you want to start your docker containers during integration tests -->
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>stop</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!--This plugin used for running integration tests in integration-test build phase-->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <configuration>
          <changeLogFile>src/main/db-migration/changelog.xml</changeLogFile>
          <driver>${jdbc.driverClassName}</driver>
          <url>${jdbc.url}</url>
          <username>${jdbc.username}</username>
          <password>${jdbc.password}</password>
          <outputFileEncoding>UTF-8</outputFileEncoding>
          <verbose>true</verbose>
        </configuration>

        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
