apply plugin: 'java'
apply plugin: 'maven'

group = 'by.andd3dfx'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.2'
    compile group: 'org.apache.activemq', name: 'activemq-broker', version: '5.14.5'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '1.5.8.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.jmock', name: 'jmock-legacy', version: '2.8.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile 'com.github.stefanbirkner:system-rules:1.17.0'
}

test {
    //we want display the following test events
    testLogging {
        events "FAILED", "SKIPPED"
    }

    //show tests stats according to: https://stackoverflow.com/questions/3963708/gradle-how-to-display-test-results-in-the-console-in-real-time
    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
}
